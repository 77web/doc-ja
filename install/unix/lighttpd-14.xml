<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 7006df7c1fbc64457ac4011ae33309c3f3e5b202 Maintainer: takagi Status: ready -->
<sect1 xml:id="install.unix.lighttpd-14" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Lighttpd 1.4 (Unix システム用)</title>

 <para>
  ここでは、Unix システム上の Lighttpd 1.4
  で PHP を使用する際の注意点とヒントをまとめます。
 </para>

 <para>
  まず <link xlink:href="&url.lighttpd.doc;">Lighttpd trac</link>
  で Lighttpd のインストール方法をよく読んでからこれ以降に進みましょう。
 </para>
 
 <para>
  PHP と Lighttpd を組み合わせる際におすすめの SAPI は FastCGI です。
  FastCGI は、php-cgi では自動的に有効になります。
 </para>
 
 <sect2 xml:id="install.unix.lighttpd-14.lighttpd-spawn">
  <title>Lighttpd に php プロセスを起動させる</title>

  <para>
   Lighttpd から php に接続して FastCGI
   プロセスを立ち上げさせるよう設定するには、
   <filename>lighttpd.conf</filename> を編集します。
   ローカルシステムの FastCGI
   プロセスに接続するにはソケットの使用をおすすめします。
  </para>

  <example>
   <title>lighttpd.conf の抜粋</title>
   <screen>
<![CDATA[
server.modules += ( "mod_fastcgi" )

fastcgi.server = ( ".php" =>
  ((
    "socket" => "/tmp/php.socket",
    "bin-path" => "/usr/local/bin/php-cgi",
    "bin-environment" => (
      "PHP_FCGI_CHILDREN" => "16",
      "PHP_FCGI_MAX_REQUESTS" => "10000"
    ),
    "min-procs" => 1,
    "max-procs" => 1,
    "idle-timeout" => 20
  ))
)
]]>

   </screen>
  </example>

  <para>
   <filename>bin-path</filename> ディレクティブにより、lighttpd
   が FastCGI プロセスを動的に起動できるようになります。
   PHP は、環境変数 <envar>PHP_FCGI_CHILDREN</envar> の内容に応じて子プロセスを起動します。
   <literal>bin-environment</literal> ディレクティブは、起動するプロセスの環境を設定します。
   リクエストの数が <envar>PHP_FCGI_MAX_REQUESTS</envar> の値に達すると、
   PHP は子プロセスを kill します。ディレクティブ
   <literal>min-procs</literal> および <literal>max-procs</literal> は、PHP での使用は避けるべきです。
   PHP は自身の子プロセスを自前で管理しますし、
   APC のような opcode キャッシュは PHP が管理する子プロセスしか共有しません。
   <literal>min-procs</literal> を <literal>1</literal> より大きい値に設定すると、
   PHP レスポンダの数が <envar>PHP_FCGI_CHILDREN</envar> にその値をかけたものとなります
   (2 min-procs * 16 子プロセスで 32 のレスポンダとなります)。
  </para>
 </sect2>

 <sect2 xml:id="install.unix.lighttpd-14.spawn-fcgi">
  <title>spawn-fcgi での起動</title>  

  <para>
   Lighttpd には spawn-fcgi というプログラムが含まれており、
   FastCGI プロセスの起動を簡単に行えるようになっています。
  </para>
 </sect2>

 <sect2 xml:id="install.unix.lighttpd-14.spawn-php">
  <title>php-cgi の起動</title>

  <para>
   spawn-fcgi なしでプロセスを起動することもできますが、多少難易度が上がります。
   環境変数 <envar>PHP_FCGI_CHILDREN</envar> で、PHP がリクエストの処理用に起動する子の数を設定します。
   <envar>PHP_FCGI_MAX_REQUESTS</envar> は、各子プロセスの生存期間 (リクエスト数)
   を設定します。php レスポンダを起動するシンプルな bash スクリプトの例を以下に示します。
  </para>
     
  <example>
   <title>FastCGI レスポンダの起動</title>
   <screen>
<![CDATA[
#!/bin/sh

# php-cgi バイナリの場所
PHP=/usr/local/bin/php-cgi

# PID ファイルの場所
PHP_PID=/tmp/php.pid

# アドレスへのバインド
#FCGI_BIND_ADDRESS=10.0.1.1:10000
# ドメインソケットへのバインド
FCGI_BIND_ADDRESS=/tmp/php.sock

PHP_FCGI_CHILDREN=16
PHP_FCGI_MAX_REQUESTS=10000

env -i PHP_FCGI_CHILDREN=$PHP_FCGI_CHILDREN \
       PHP_FCGI_MAX_REQUESTS=$PHP_FCGI_MAX_REQUESTS \
       $PHP -b $FCGI_BIND_ADDRESS &

echo $! > "$PHP_PID"

]]>
   </screen>
  </example>
 </sect2>

 <sect2 xml:id="install.unix.lighttpd-14.remote-fcgi">
  <title>リモートの FCGI インスタンスへの接続</title>

  <para>
   FastCGI インスタンスを複数のリモートマシンで起動して、
   アプリケーションの規模を拡大することができます。
  </para>
   
  <example>
   <title>リモートの php-fastcgi インスタンスへの接続</title>
   <screen>
<![CDATA[
fastcgi.server = ( ".php" =>
   (( "host" => "10.0.0.2", "port" => 1030 ),
    ( "host" => "10.0.0.3", "port" => 1030 ))
)
]]>
   </screen>
  </example>
 </sect2>
</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
