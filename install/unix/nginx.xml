<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 346946 $ -->
<!-- EN-Revision: a2fcd66690146176936b03f26ee0f530063ce888 Maintainer: mumumu Status: working -->

<sect1 xml:id="install.unix.nginx" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Nginx 1.4.x (Unix システム用)</title>

 <para>
  このドキュメントは、Nginx 1.4.x HTTPサーバ 向けに PHP を
  PHP-FPM とともにインストールし、設定する方法を示します。
 </para>

 <para>
  このガイドは、あなたが Nginx をソースコードからビルドしたことを想定しています。
  よって、すべてのバイナリと設定は 
  <literal>/usr/local/nginx</literal> にあると想定しています。
  仮にこれに当てはまらず、Nginx を他の手段で取得した場合は、
  <link xlink:href="&url.nginx;">Nginx Wiki</link> を参照し、
  このマニュアルをあなたのセットアップに読み替えてください。
 </para>

 <para>
  このガイドは、Nginx サーバが PHP アプリケーションを実行できるように設定し、
  それを port 80 で公開するための基本的な設定を示します。
  あなたのセットアップを最適化したい場合、Nginx と PHP-FPM のドキュメント
  を調べることを推奨します。セットアップの最適化は、このガイドの範囲外です。
 </para>

 <para>
  このドキュメント全体を通して、バージョン番号は
  ドキュメント全体が将来でも正しく保たれるようにするため、
  'x' で置き換えられている点に注意してください。
  'x' については、必要に応じて対応するバージョン番号に置き換えるようにしてください。
 </para>

 <orderedlist>
  <listitem>
   <para>
    あなたのシステム向けに Nginx を取得し、インストールするために、
    Nginx Wiki の <link xlink:href="&url.nginx.wiki.install;">install</link>
    を参照することを推奨します。
   </para>
  </listitem>

  <listitem>
   <para>
    PHP のソースコードを取得し、展開します。
   </para>

   <informalexample xml:id="install.unix.nginx.extract.php">
    <screen>
<![CDATA[
tar zxf php-x.x.x
]]>
    </screen>
   </informalexample>
  </listitem>

  <listitem>
   <para>
    PHP を configure し、ビルドします。
    ここで PHP を様々なオプションを使ってカスタマイズできます。
    たとえば、どの拡張機能を有効にするか、のようなものです。
    利用できるオプションの一覧については、 ./configure --help を
    参照してください。
    私達の例では、PHP-FPM を MySQLi のサポートを有効にして
    シンプルに configure することにします。
   </para>

   <informalexample xml:id="install.unix.nginx.build.php">
    <screen>
<![CDATA[
cd ../php-x.x.x
./configure --enable-fpm --with-mysqli
make
sudo make install
]]>
    </screen>
   </informalexample>
  </listitem>

  <listitem>
   <para>
    設定ファイルを取得し、正しい場所に移動する。
   </para>

   <informalexample xml:id="install.unix.nginx.configure.php">
    <screen>
<![CDATA[
cp php.ini-development /usr/local/php/php.ini
cp /usr/local/etc/php-fpm.d/www.conf.default /usr/local/etc/php-fpm.d/www.conf
cp sapi/fpm/php-fpm /usr/local/bin
]]>
    </screen>
   </informalexample>
  </listitem>

  <listitem>
   <para>
    It is important that we prevent Nginx from passing requests to the
    PHP-FPM backend if the file does not exists, allowing us to prevent
    arbitrarily script injection.
   </para>
   <para>
    We can fix this by setting the
    <link linkend="ini.cgi.fix-pathinfo">cgi.fix_pathinfo</link>
    directive to <literal>0</literal> within our php.ini file.
   </para>
   <para>
    Load up php.ini:
   </para>

   <informalexample xml:id="install.unix.nginx.configure.ini">
    <screen>
<![CDATA[
vim /usr/local/php/php.ini
]]>
    </screen>
   </informalexample>

   <para>
    Locate <literal>cgi.fix_pathinfo=</literal> and modify it as follows:
   </para>

   <informalexample xml:id="install.unix.nginx.configure.pathinfo">
    <screen>
<![CDATA[
cgi.fix_pathinfo=0
]]>
    </screen>
   </informalexample>
  </listitem>

  <listitem>
   <para>
    php-fpm.conf must be modified to specify that php-fpm must run as the user
    www-data and the group www-data before we can start the service:
   </para>

   <informalexample xml:id="install.unix.nginx.modify.phpfpm">
    <screen>
<![CDATA[
vim /usr/local/etc/php-fpm.d/www.conf
]]>
    </screen>
   </informalexample>

   <para>
    Find and modify the following: 
   </para>

   <informalexample xml:id="install.unix.nginx.modify.phpfpm.usergroup">
    <screen>
<![CDATA[
; Unix user/group of processes
; Note: The user is mandatory. If the group is not set, the default user's group
;       will be used.
user = www-data
group = www-data
]]>
    </screen>
   </informalexample>

   <para>
    The php-fpm service can now be started:
   </para>

   <informalexample xml:id="install.unix.nginx.start.phpfpm">
    <screen>
<![CDATA[
/usr/local/bin/php-fpm
]]>
    </screen>
   </informalexample>

   <para>
    This guide will not configure php-fpm any further, if you are interested
    in further configuring php-fpm then please consult the documentation.
   </para>
  </listitem>

  <listitem>
   <para>
    Nginx must now be configured to support the processing of PHP applications:
   </para>

   <informalexample xml:id="install.unix.nginx.configure.nginx">
    <programlisting>
<![CDATA[
vim /usr/local/nginx/conf/nginx.conf
]]>
    </programlisting>
   </informalexample>

   <para>
    Modify the default location block to be aware it must attempt
    to serve .php files:
   </para>

   <informalexample xml:id="install.unix.nginx.configure.nginx.location">
    <programlisting role="nginx-conf">
<![CDATA[
location / {
    root   html;
    index  index.php index.html index.htm;
}
]]>
    </programlisting>
   </informalexample>

   <para>
    The next step is to ensure that .php files are passed to the
    PHP-FPM backend. Below the commented default PHP location block,
    enter the following:
   </para>

   <informalexample xml:id="install.unix.nginx.configure.nginx.php">
    <programlisting role="nginx-conf">
<![CDATA[
location ~* \.php$ {
    fastcgi_index   index.php;
    fastcgi_pass    127.0.0.1:9000;
    include         fastcgi_params;
    fastcgi_param   SCRIPT_FILENAME    $document_root$fastcgi_script_name;
    fastcgi_param   SCRIPT_NAME        $fastcgi_script_name;
}
]]>
    </programlisting>
   </informalexample>

   <para>
    Restart Nginx.
   </para>

   <informalexample xml:id="install.unix.nginx.restart.nginx">
    <screen>
<![CDATA[
sudo /usr/local/nginx/sbin/nginx -s stop
sudo /usr/local/nginx/sbin/nginx
]]>
    </screen>
   </informalexample>
  </listitem>

  <listitem>
   <para>
    Create a test file
   </para>

   <informalexample xml:id="install.unix.nginx.test.nginx.php">
    <screen>
<![CDATA[
rm /usr/local/nginx/html/index.html
echo "<?php phpinfo(); ?>" >> /usr/local/nginx/html/index.php
]]>
    </screen>
   </informalexample>

   <para>
    Now navigate to http://localhost. The phpinfo() should now be shown.
   </para>
  </listitem>
 </orderedlist>

 <para>
  Following the steps above you will have a running Nginx web server with
  support for PHP as an <literal>FPM</literal> <literal>SAPI</literal> module.  Of course there are
  many more configuration options available for Nginx and PHP.  For more
  information type <command>./configure --help</command> in the corresponding
  source tree.
 </para>

</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
