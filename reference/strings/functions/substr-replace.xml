<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: e095023e408c8cb6378ae16bb6870343a3946919 Maintainer: hirokawa Status: ready -->
<!-- CREDITS: shimooka,mumumu -->
<refentry xml:id="function.substr-replace" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>substr_replace</refname>
  <refpurpose>文字列の一部を置換する</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>string</type><type>array</type></type><methodname>substr_replace</methodname>
   <methodparam><type class="union"><type>array</type><type>string</type></type><parameter>string</parameter></methodparam>
   <methodparam><type class="union"><type>array</type><type>string</type></type><parameter>replace</parameter></methodparam>
   <methodparam><type class="union"><type>array</type><type>int</type></type><parameter>offset</parameter></methodparam>
   <methodparam choice="opt"><type class="union"><type>array</type><type>int</type><type>null</type></type><parameter>length</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   <function>substr_replace</function>は、文字列
   <parameter>string</parameter>の <parameter>offset</parameter> および
   (オプションの) <parameter>length</parameter> パラメータで区切られた部分を
   <parameter>replace</parameter> で指定した文字列に置換します。
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>string</parameter></term>
     <listitem>
      <para>
       入力文字列。
      </para>
      <para>
       文字列の配列を指定することもでき、各文字列について順に置換を行います。
       この場合、他のパラメータ <parameter>replace</parameter>、<parameter>offset</parameter>
       および <parameter>length</parameter> がスカラ値なら
       それを各入力文字列に順次適用し、配列なら各入力文字列に対応する要素の値を適用します。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>replace</parameter></term>
     <listitem>
      <para>
       置換する文字列。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>offset</parameter></term>
     <listitem>
      <para>
       <parameter>offset</parameter> が負ではない場合、置換は
       <parameter>string</parameter> で <parameter>offset</parameter>
       番目の文字から始まります。
      </para>
      <para>
       <parameter>offset</parameter> が負の場合、置換は
       <parameter>string</parameter> の終端から
       <parameter>offset</parameter> 番目の文字から始まります。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>length</parameter></term>
     <listitem>
      <para>
       正の値を指定した場合、
       <parameter>string</parameter> の置換される部分の長さを表します。
       負の場合、置換を停止する位置が <parameter>string</parameter>
       の終端から何文字目であるかを表します。このパラメータが省略された場合、
       デフォルト値は strlen(<parameter>string</parameter>)、すなわち、
       <parameter>string</parameter> の終端まで置換することになります。
       当然、もし <parameter>length</parameter> がゼロだったら、
       この関数は <parameter>string</parameter> の最初から
       <parameter>offset</parameter> の位置に
       <parameter>replace</parameter> を挿入するということになります。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   結果の文字列を返します。もし、<parameter>string</parameter>
   が配列の場合、配列が返されます。
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>8.0.0</entry>
       <entry>
        <parameter>length</parameter> は、nullable になりました。
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>シンプルな <function>substr_replace</function> の例</title>
    <programlisting role="php">
<![CDATA[
<?php
$var = 'ABCDEFGH:/MNRPQR/';
echo "Original: $var<hr />\n";

/* 以下の2つの例は、全ての $var で 'bob' で置換します。 */
echo substr_replace($var, 'bob', 0) . "<br />\n";
echo substr_replace($var, 'bob', 0, strlen($var)) . "<br />\n";

/* $var の先頭に 'bob' を挿入します */
echo substr_replace($var, 'bob', 0, 0) . "<br />\n";

/* 次の2つの例は、$var の 'MNRPQR' を 'bob'で置換します */
echo substr_replace($var, 'bob', 10, -1) . "<br />\n";
echo substr_replace($var, 'bob', -7, -1) . "<br />\n";

/* $var から 'MNRPQR' を削除します */
echo substr_replace($var, '', 10, -1) . "<br />\n";
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>
     <function>substr_replace</function> で複数の文字列を一度に置換する例
    </title>
    <programlisting role="php">
<![CDATA[
<?php
$input = array('A: XXX', 'B: XXX', 'C: XXX');

// シンプルなケース: 各文字列の XXX を YYY で置換します
echo implode('; ', substr_replace($input, 'YYY', 3, 3))."\n";

// より複雑で、各文字列で置換する値が異なるケース
$replace = array('AAA', 'BBB', 'CCC');
echo implode('; ', substr_replace($input, $replace, 3, 3))."\n";

// 置換する文字数が異なるケース
$length = array(1, 2, 3);
echo implode('; ', substr_replace($input, $replace, 3, $length))."\n";
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
A: YYY; B: YYY; C: YYY
A: AAA; B: BBB; C: CCC
A: AAAXX; B: BBBX; C: CCC
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  &note.bin-safe;
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>str_replace</function></member>
    <member><function>substr</function></member>
    <member><link linkend="language.types.string.substr">文字列への文字単位のアクセスと修正</link></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
