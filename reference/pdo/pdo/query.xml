<?xml version="1.0" encoding="utf-8" ?>
<!-- $Revision$ -->
<!-- EN-Revision: 082ddc19f53e6e254010de1a1fbbe485ff744ec1 Maintainer: takagi Status: ready -->
<!-- CREDITS: hirokawa,shimooka,mumumu -->
<refentry xml:id="pdo.query" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>PDO::query</refname>
  <refpurpose>
   プレースホルダを指定せずに、SQL ステートメントを準備して実行する
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="PDO">
   <modifier>public</modifier> <type class="union"><type>PDOStatement</type><type>false</type></type><methodname>PDO::query</methodname>
   <methodparam><type>string</type><parameter>query</parameter></methodparam>
   <methodparam choice="opt"><type class="union"><type>int</type><type>null</type></type><parameter>fetchMode</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>

  <methodsynopsis role="PDO">
   <modifier>public</modifier> <type class="union"><type>PDOStatement</type><type>false</type></type><methodname>PDO::query</methodname>
   <methodparam><type>string</type><parameter>query</parameter></methodparam>
   <methodparam choice="opt"><type class="union"><type>int</type><type>null</type></type><parameter>fetchMode</parameter><initializer>PDO::FETCH_COLUMN</initializer></methodparam>
   <methodparam><type>int</type><parameter>colno</parameter></methodparam>
  </methodsynopsis>

  <methodsynopsis role="PDO">
   <modifier>public</modifier> <type class="union"><type>PDOStatement</type><type>false</type></type><methodname>PDO::query</methodname>
   <methodparam><type>string</type><parameter>query</parameter></methodparam>
   <methodparam choice="opt"><type class="union"><type>int</type><type>null</type></type><parameter>fetchMode</parameter><initializer>PDO::FETCH_CLASS</initializer></methodparam>
   <methodparam><type>string</type><parameter>classname</parameter></methodparam>
   <methodparam><type>array</type><parameter>constructorArgs</parameter></methodparam>
  </methodsynopsis>

  <methodsynopsis role="PDO">
   <modifier>public</modifier> <type class="union"><type>PDOStatement</type><type>false</type></type><methodname>PDO::query</methodname>
   <methodparam><type>string</type><parameter>query</parameter></methodparam>
   <methodparam choice="opt"><type class="union"><type>int</type><type>null</type></type><parameter>fetchMode</parameter><initializer>PDO::FETCH_INTO</initializer></methodparam>
   <methodparam><type>object</type><parameter>object</parameter></methodparam>
  </methodsynopsis>

  <para>
   <methodname>PDO::query</methodname> は、一回の関数コールの中で
   SQL ステートメントを準備して実行し、
   結果を <classname>PDOStatement</classname> オブジェクトとして返します。
  </para>
  <para>
   複数回発行する必要があるステートメントの場合、
   <methodname>PDO::prepare</methodname> で <classname>PDOStatement</classname> ステートメントを準備し、
   <methodname>PDOStatement::execute</methodname> でそのステートメントを
   複数回発行する方がより良いパフォーマンスを得られると実感するでしょう。
  </para>
  <para>
   <methodname>PDO::query</methodname> を次にコールする前に
   結果セット内の全てのデータを取得しない場合、そのコールは失敗します。
   <methodname>PDOStatement::closeCursor</methodname> をコールし、
   次に <methodname>PDO::query</methodname> をコールする前に
   <classname>PDOStatement</classname> オブジェクトに関連付けられたリソースを解放してください。
  </para>

  <note>
   <para>
    <parameter>query</parameter>
    にプレースホルダーが含まれている場合、
    準備と実行は別々に行う必要があります。
    つまり、<methodname>PDO::prepare</methodname> を使って準備し、
    <methodname>PDOStatement::execute</methodname>
    を実行しなければいけません。
   </para>
  </note>

 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>query</parameter></term>
      <listitem>
       <para>
        準備、発行する SQL ステートメント。
       </para>
       <para>
        SQL にプレースホルダーが含まれている場合、
        <methodname>PDO::prepare</methodname> と
        <methodname>PDOStatement::execute</methodname>
        を代わりに使う必要があります。
        それとは別のやり方として、
        <methodname>PDO::query</methodname> を呼び出す前に、
        <methodname>PDO::quote</methodname>
        を使って適切にフォーマットしたデータを使って
        SQL文を手動で準備することができます。
        但し、<methodname>PDO::quote</methodname>
        は、ドライバがサポートしている場合に限り使えます。
       </para>
      </listitem>
     </varlistentry>
    <varlistentry>
     <term><parameter>fetchMode</parameter></term>
      <listitem>
       <para>
        返される <classname>PDOStatement</classname>
        のためのデフォルトのフェッチモード。
        定数 <link linkend="pdo.constants"><literal>PDO::FETCH_*</literal></link>
        のうちのひとつを設定しなければいけません。
       </para>
       <para>
        この引数を渡すと、残りの引数は、
        結果のステートメントオブジェクトに対して、
        <methodname>PDOStatement::setFetchMode</methodname>
        を呼び出したのと同じような扱いになります。
        残りの引数は、選択するフェッチモードに応じて変化します。
       </para>
      </listitem>
     </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
    <classname>PDOStatement</classname> オブジェクトを返します。
    &return.falseforfailure;
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  &pdo.errors;
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>プレースホルダーがないSQLを、<methodname>PDO::query</methodname> で実行できます</title>
    <programlisting role="php">
<![CDATA[
<?php
$sql = 'SELECT name, color, calories FROM fruit ORDER BY name';
foreach ($conn->query($sql) as $row) {
    print $row['name'] . "\t";
    print $row['color'] . "\t";
    print $row['calories'] . "\n";
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
apple   red     150
banana  yellow  250
kiwi    brown   75
lemon   yellow  25
orange  orange  300
pear    green   150
watermelon      pink    90
]]>
    </screen>
   </example>
  </para>
 </refsect1>


 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>PDO::exec</methodname></member>
    <member><methodname>PDO::prepare</methodname></member>
    <member><methodname>PDOStatement::execute</methodname></member>
   </simplelist>
  </para>
 </refsect1>


</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
