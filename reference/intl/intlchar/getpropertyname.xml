<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 1976eae0d815797af97a1e16c5cd90ffc2868395 Maintainer: mumumu Status: ready -->
<refentry xml:id="intlchar.getpropertyname" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>IntlChar::getPropertyName</refname>
  <refpurpose>プロパティに対応する、Unicode での名前を取得する</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="IntlChar">
   <modifier>public</modifier> <modifier>static</modifier> <type class="union"><type>string</type><type>false</type></type><methodname>IntlChar::getPropertyName</methodname>
   <methodparam><type>int</type><parameter>property</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>type</parameter><initializer>IntlChar::LONG_PROPERTY_NAME</initializer></methodparam>
  </methodsynopsis>
  <para>
   指定されたプロパティに対応する、Unicode の名前を返します。
   Unicode のデータベースファイル
   PropertyAliases.txt に存在するものです。
  </para>
  <para>
   さらに、
   この関数はプロパティ
   <constant>IntlChar::PROPERTY_GENERAL_CATEGORY_MASK</constant> 
   を仮想の名前 "gcm" / "General_Category_Mask" に対応させています。
   これらの名前は、PropertyAliases.txt には存在しません。
  </para>
  <para>
   この関数は、
   <function>IntlChar::getPropertyEnum</function>
   を補完するものです。
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>property</parameter></term>
    <listitem>
     &intl.property.parameter;
     <para>
      <constant>IntlChar::PROPERTY_INVALID_CODE</constant>
      は使ってはいけません。
      また、<parameter>property</parameter> が範囲外の値の場合
      &false; を返します。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>type</parameter></term>
    <listitem>
     <para>
      どの名前を取得するかを選択します。
      範囲外の値が指定された場合、&false; を返します。
     </para>
     <para>
      全てのプロパティには長い名前 (long name) が存在します。
      殆どのプロパティには短縮名 (short name) が存在しますが、
      ないものもあります。
      さらに、Unicode はこれら以外の追加の名前も許容しています。つまり、
      追加の名前が存在する場合、
      <constant>IntlChar::LONG_PROPERTY_NAME</constant>
      に追加される形で返されます。
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   名前を返します。
   <parameter>property</parameter> や
   <parameter>type</parameter> が範囲外の場合は、
   &false; を返します。
  </para>
  <para>
   指定された <parameter>type</parameter> が &false; を返す場合は、
   それより大きな 
   <parameter>type</parameter> の値も &false; を返しますが、
   ひとつだけ例外があります。
   <constant>IntlChar::SHORT_PROPERTY_NAME</constant>
   を指定して &false; を返す場合は、
   <constant>IntlChar::LONG_PROPERTY_NAME</constant> 
   (と、それより大きな値) は &false; でない値を返します。 
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>&intl.property.example;</title>
   <programlisting role="php">
    <![CDATA[
<?php
var_dump(IntlChar::getPropertyName(IntlChar::PROPERTY_BIDI_CLASS));
var_dump(IntlChar::getPropertyName(IntlChar::PROPERTY_BIDI_CLASS, IntlChar::SHORT_PROPERTY_NAME));
var_dump(IntlChar::getPropertyName(IntlChar::PROPERTY_BIDI_CLASS, IntlChar::LONG_PROPERTY_NAME));
var_dump(IntlChar::getPropertyName(IntlChar::PROPERTY_BIDI_CLASS, IntlChar::LONG_PROPERTY_NAME + 1));
?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
    <![CDATA[
string(10) "Bidi_Class"
string(2) "bc"
string(10) "Bidi_Class"
bool(false)
]]>
   </screen>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>IntlChar::getPropertyEnum</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
