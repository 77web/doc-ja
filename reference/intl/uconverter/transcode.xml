<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 1976eae0d815797af97a1e16c5cd90ffc2868395 Maintainer: takagi Status: ready -->
<refentry xml:id="uconverter.transcode" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>UConverter::transcode</refname>
  <refpurpose>ある文字エンコーディングから別の文字エンコーディングに文字列を変換する</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="UConverter">
   <modifier>public</modifier> <modifier>static</modifier> <type class="union"><type>string</type><type>false</type></type><methodname>UConverter::transcode</methodname>
   <methodparam><type>string</type><parameter>str</parameter></methodparam>
   <methodparam><type>string</type><parameter>toEncoding</parameter></methodparam>
   <methodparam><type>string</type><parameter>fromEncoding</parameter></methodparam>
   <methodparam choice="opt"><type class="union"><type>array</type><type>null</type></type><parameter>options</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   文字列 <parameter>str</parameter> の文字エンコーディングを、
   <parameter>fromEncoding</parameter> から
   <parameter>toEncoding</parameter> に変換します。
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>str</parameter></term>
    <listitem>
     <para>
      変換する文字列。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>toEncoding</parameter></term>
    <listitem>
     <para>
      変換したいエンコーディング。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>fromEncoding</parameter></term>
    <listitem>
     <para>
      <parameter>str</parameter> の解釈に使われる文字セット。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>options</parameter></term>
    <listitem>
     <para>
      オプションの配列。以下のキーが使えます:
      <simplelist>
       <member>
        <literal>'to_subst'</literal> -
        <parameter>toEncoding</parameter> ではエンコードできない
        <parameter>str</parameter> の文字を置き換えるのに使う文字。
        これを指定する場合、
        変換先のエンコーディングのうちの一文字でなければいけません。
       </member>
      </simplelist>
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   変換後の文字列を返します。
   &return.falseforfailure;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>UTF-8 から UTF-16 に変換し、UTF-8 に戻す例</title>
   <programlisting role="php">
<![CDATA[
<?php
$utf8_string = "\x5A\x6F\xC3\xAB"; // 'Zoë' in UTF-8
$utf16_string = UConverter::transcode($utf8_string, 'UTF-16BE', 'UTF-8');
echo bin2hex($utf16_string), "\n";
$new_utf8_string = UConverter::transcode($utf16_string, 'UTF-8', 'UTF-16BE');
echo bin2hex($new_utf8_string), "\n";
?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
005a006f00eb
5a6fc3ab
]]>
   </screen>
  </example>
  <example>
   <title>入力に不正な文字が含まれていた場合</title>
   <para>
    入力文字列に
    <parameter>fromEncoding</parameter>
    では不正なバイト列が含まれていた場合、
    Unicode のコードポイント
    U+FFFD (置換文字) に置き換えられます。
    この置き換えは、<parameter>toEncoding</parameter>
    に変換する前に行われます。
   </para>
   <programlisting role="php">
<![CDATA[
<?php
$invalid_utf8_string = "\xC3"; // incomplete multi-byte UTF-8 sequence
$utf16_string = UConverter::transcode($invalid_utf8_string, 'UTF-16BE', 'UTF-8');
echo bin2hex($utf16_string), "\n";
?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
fffd
]]>
   </screen>
  </example>
  <example>
   <title>エンコードできない文字</title>
   <para>
    入力文字列に
    <parameter>toEncoding</parameter>
    で表現できない文字が含まれていた場合、
    それらは一文字で置換されます。
    置換に使われる文字はエンコーディングに依存しますが、
    <literal>'to_subst'</literal> を使って制御できます。
   </para>
   <programlisting role="php">
<![CDATA[
<?php
$utf8_string = "\xE2\x82\xAC"; // € (Euro Sign) does not exist in ISO 8859-1
// Default replacement in ISO 8859-1 is "\x1A" (Substitute)
$iso8859_1_string = UConverter::transcode($utf8_string, 'ISO-8859-1', 'UTF-8');
echo bin2hex($iso8859_1_string), "\n";
// Specify a replacement of '?' ("\x3F") instead
$iso8859_1_string = UConverter::transcode(
    $utf8_string, 'ISO-8859-1', 'UTF-8', ['to_subst' => '?']
);
echo bin2hex($iso8859_1_string), "\n";
// Since ISO 8859-1 cannot map U+FFFD, invalid input is also replaced by to_subst
$invalid_utf8_string = "\xC3"; // incomplete multi-byte UTF-8 sequence
$iso8859_1_string = UConverter::transcode(
    $invalid_utf8_string, 'ISO-8859-1', 'UTF-8', ['to_subst' => '?']
);
echo bin2hex($iso8859_1_string), "\n";
?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
1a
3f
3f
]]>
   </screen>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>mb_convert_encoding</function></member>
    <member><function>iconv</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
