<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 14dc7c47365f2b71f6c907a5ba5bccf42534d5a9 Maintainer: hirokawa Status: ready -->
<!-- CREDITS: takagi -->
<refentry xml:id="function.socket-accept" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>socket_accept</refname>
  <refpurpose>ソケットへの接続を許可する</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>Socket</type><type>false</type></type><methodname>socket_accept</methodname>
   <methodparam><type>Socket</type><parameter>socket</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>socket_create</function> を使用してソケット
   <parameter>socket</parameter> を作成した後、
   <function>socket_bind</function> で名前に関連付け、
   <function>socket_listen</function> で接続をモニタします。この関数は、
   このソケットへの接続を許可します。接続に成功すると、新しい
   <classname>Socket</classname> クラスのインスタンスが返されます。
   このインスタンスは通信の際に使用されます。
   ソケット上に複数の接続がキューで待っている場合、最初の接続が使用
   されます。接続待ちがない場合、<function>socket_accept</function>
   は接続が存在するまでブロックされます。
   <parameter>socket</parameter> が
   <function>socket_set_blocking</function> または
   <function>socket_set_nonblock</function> により非ブロックモードで
   作成された場合、&false; が返されます。
  </para>
  <para>
   <function>socket_accept</function> により返された
   <classname>Socket</classname> クラスのインスタンスは、
   新規接続を許可するために使用することはできません。この場合でも
   元の接続待ちのソケット <parameter>socket</parameter> は
   オープンされたままであり、再使用可能です。
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>socket</parameter></term>
     <listitem>
      <para>
       <function>socket_create</function> で作成した
       <classname>Socket</classname> クラスのインスタンス。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   成功した場合に新しい <classname>Socket</classname> クラスのインスタンスを、
   エラー時に &false; を返します。
   実際のエラーコードは、<function>socket_last_error</function> を
   コールすることで取得可能です。このコードを
   <function>socket_strerror</function> に渡すことで、
   エラーの内容を文字列で取得することが可能です。
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.0.0</entry>
      <entry>
       成功した場合に、この関数は
       <classname>Socket</classname> クラスのインスタンスを返すようになりました。
       これより前のバージョンでは、リソースを返していました。
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>socket_connect</function></member>
    <member><function>socket_listen</function></member>
    <member><function>socket_create</function></member>
    <member><function>socket_bind</function></member>
    <member><function>socket_strerror</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
