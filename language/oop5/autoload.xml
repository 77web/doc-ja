<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 9ee9eccf455188ab6eb352194eb6f9eb99e15606 Maintainer: hirokawa Status: ready -->
<!-- Credits: mumumu -->

 <sect1 xml:id="language.oop5.autoload" xmlns="http://docbook.org/ns/docbook">
 <title>クラスのオートローディング</title>
 <para>
  オブジェクト指向アプリケーションを作成する開発者の多くは、
  クラス定義毎に一つのPHPソースファイルを作成します。
  最大の問題は、各スクリプトの先頭に、必要な読み込みを行う長いリストを
  記述する必要があることです(各クラスについて一つ)。
 </para>
 <para>
  <function>spl_autoload_register</function> 関数を使うと、
  任意の数のオートローダーを登録でき、
  クラスやインターフェイスが定義されていなくても自動的に読み込めるようになります。
  オートローダーを登録すれば、PHPがエラーで止まる前にクラスをロードする最後の
  チャンスが与えられます。
 </para>

 <caution>
  <para>
   PHP 8.0.0 より前のバージョンでは、
   <function>__autoload</function> 関数でもクラスやインターフェイスのオートロードが可能でした。
   しかし、この関数は
   <function>spl_autoload_register</function> 関数に比べると柔軟性という点で劣っています。
   そのため、<function>__autoload</function>
   関数は PHP 7.2.0 で推奨されなくなり、
   PHP 8.0.0 で削除されました。
  </para>
 </caution>
 <para>
  <example>
   <title>オートロードの例</title>
   <para>
    この例は、 クラス <literal>MyClass1</literal> および
    <literal>MyClass2</literal> をそれぞれ
    <filename>MyClass1.php</filename> および
    <filename>MyClass2.php</filename> からロードします。
   </para>
   <programlisting role="php">
<![CDATA[
<?php
spl_autoload_register(function ($class_name) {
    include $class_name . '.php';
});

$obj  = new MyClass1();
$obj2 = new MyClass2();
?>
]]>
    </programlisting>
   </example>
   <example>
    <title>オートロードの別の例</title>
    <para>
     この例は、インターフェイス <literal>ITest</literal> をロードしようとします。
    </para>
    <programlisting role="php">
<![CDATA[
<?php

spl_autoload_register(function ($name) {
    var_dump($name);
});

class Foo implements ITest {
}

/*
string(5) "ITest"

Fatal error: Interface 'ITest' not found in ...
*/
?>
]]>
    </programlisting>
   </example>
   <example>
    <title>例外処理つきのオートロード</title>
    <para>
     この例は、例外をスローして try/catch ブロックの動きを示します。
    </para>
    <programlisting role="php">
<![CDATA[
<?php
spl_autoload_register(function ($name) {
    echo "Want to load $name.\n";
    throw new Exception("Unable to load $name.");
});

try {
    $obj = new NonLoadableClass();
} catch (Exception $e) {
    echo $e->getMessage(), "\n";
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Want to load NonLoadableClass.
Unable to load NonLoadableClass.
]]>
    </screen>
   </example>
   <example>
    <title>例外処理つきのオートロード - 独自の例外が見つからない場合</title>
    <para>
     この例では、ロードできない独自の例外クラスをスローします。
    </para>
    <programlisting role="php">
<![CDATA[
<?php
spl_autoload_register(function ($name) {
    echo "Want to load $name.\n";
    throw new MissingException("Unable to load $name.");
});

try {
    $obj = new NonLoadableClass();
} catch (Exception $e) {
    echo $e->getMessage(), "\n";
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Want to load NonLoadableClass.
Want to load MissingException.

Fatal error: Class 'MissingException' not found in testMissingException.php on line 4
]]>
    </screen>
   </example>
  </para>

  <simplesect role="seealso">
   &reftitle.seealso;
   <para>
    <simplelist>
     <member><function>unserialize</function></member>
     <member><link linkend="ini.unserialize-callback-func">unserialize_callback_func</link></member>
     <member><function>spl_autoload_register</function></member>
     <member><function>spl_autoload</function></member>
     <member><function>__autoload</function></member>
    </simplelist>
   </para>
  </simplesect>

 </sect1>
 
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
